<?php

namespace AppBundle\Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * GenRegionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GenRegionRepository extends EntityRepository
{


public function listaTemporada()
{ 
//Temporada->Version
$query = "
SELECT 
a.id as idTemporada,
a.temporada as temporada,
b.id as idTemporadaVersion,
b.temporadaVersion as temporadaversion
from NormasBundle\Entity\GenTemporada a 
INNER JOIN NormasBundle\Entity\GenTemporadaVersion b WITH a.id = b.idGenTemporada 
group by
a.id,
a.temporada,
b.id,
b.temporadaVersion
order by
a.id,
a.temporada,
b.temporadaVersion asc,
b.id";

    $query        = $this->_em->createQuery($query);
    $arrSac       = $query->getArrayResult();
    //echo'<pre>';var_dump($query->getArrayResult());exit;
    $arrSacReturn = array();
    $auxregion = "";
    $auxcomuna = "";
    //dump($arrSac);exit;
    $objRegion  = new \stdClass();
    //dump($arrSac);exit;
    for($x=0;$x <count($arrSac);$x++){
        // se agrega la temporada version. y sus dos datos identificativos
        //if(!array_in($arrSac[$x]['nombre'],$arrSacReturn['label'] )){
    	if($auxregion ==''){
    		$arrSacReturn[$arrSac[$x]['idTemporada']] = array('label'=>$arrSac[$x]['temporada'],'children'=>array(),'id'=>$arrSac[$x]['idTemporada']);
    	}else{
    		if($auxregion != $arrSac[$x]['temporada'] ){
    		 $arrSacReturn[$arrSac[$x]['idTemporada']] = array('label'=>$arrSac[$x]['temporada'],'children'=>array(),'id'=>$arrSac[$x]['idTemporada']);
    		}
    	}

    	if($auxcomuna ==''){
    		$arrSacReturn[$arrSac[$x]['idTemporada']]['children'][] = array('label'=> "Version ".$arrSac[$x]['temporadaversion'],'id'=>$arrSac[$x]['idTemporadaVersion']);
    	}else{
    		if($auxregion != $arrSac[$x]['temporadaversion'] ){
    			$arrSacReturn[$arrSac[$x]['idTemporada']]['children'][] = array('label'=>"Version ".$arrSac[$x]['temporadaversion'],'id'=>$arrSac[$x]['idTemporadaVersion']);
    		}
    	}
   
    	$auxregion = $arrSac[$x]['temporada'];
    	$auxcomuna = $arrSac[$x]['temporadaversion'];     
        // array('cob/tasa'=> $arrSac[$x]['nombre'],'valores'=>array()); 
        //}
        //$arrSacReturn[$arrSac[$x]['nombre']][]= $arrSac[$x]['nombreComuna'];

        
    }
 //dump($arrSacReturn);
    return $arrSacReturn;


}

public function listaRegion()
{ //Region->Comuna
 
$query = "
SELECT 
a.orden,
a.id as idGenRegion,
a.nombre as region,
b.id as idComuna,
b.nombre as comuna
from NormasBundle\Entity\GenRegion a 
INNER JOIN NormasBundle\Entity\GenComuna b WITH (a.id = b.idGenRegion)
group by
a.orden,
a.id,
a.nombre,
b.id,
b.nombre
order by
a.orden, 
a.id,
a.nombre,
b.nombre";

    $query        = $this->_em->createQuery($query);
    $arrSac       = $query->getArrayResult();

    $arrSacReturn = array();
    $auxregion = "";
    $auxcomuna = "";

    $objRegion  = new \stdClass();

    for($x=0;$x <count($arrSac);$x++){
    	
    	if($auxregion ==''){
    		$arrSacReturn[$arrSac[$x]['orden']] = array('label'=>$arrSac[$x]['region'],'children'=>array(),'id'=>$arrSac[$x]['orden']);
    	}else{
    		if($auxregion != $arrSac[$x]['region'] ){
    		 $arrSacReturn[$arrSac[$x]['orden']] = array('label'=>$arrSac[$x]['region'],'children'=>array(),'id'=>$arrSac[$x]['orden']);
    		}
    	}

    	if($auxcomuna ==''){
    		$arrSacReturn[$arrSac[$x]['orden']]['children'][] = array('label'=>$arrSac[$x]['comuna'],'id'=>$arrSac[$x]['idComuna']);
    	}else{
    		if($auxregion != $arrSac[$x]['comuna'] ){
    			$arrSacReturn[$arrSac[$x]['orden']]['children'][] = array('label'=>$arrSac[$x]['comuna'],'id'=>$arrSac[$x]['idComuna']);
    		}
    	}
   
    	$auxregion = $arrSac[$x]['region'];
    	$auxcomuna = $arrSac[$x]['comuna'];     
    	       
    }

    return $arrSacReturn;
}


public function listaSector()
{
 //sector->rubro->producto->variedad


$query ="
SELECT 
a.nombre as nombre
from AppBundle\Entity\GenRegion a";


/*echo'<pre>';var_dump('aca si llega ');exit;*/
    $query        = $this->_em->createQuery($query);
    $arrSac       = $query->getArrayResult();
    ladybug_dump($arrSac);
    //echo'<pre>';var_dump($arrSac);exit;
    //dump($arrSac);exit;
    //  dump($arrSacReturn);
    //var_dump($arrSacReturn);exit;
    return $arrSac;
}


}
